# identifier of specific DOB protocol versions
protocol_versions = [
    "dob/0",
]

# connect to the RPC of CKB node
ckb_rpc = "https://testnet.ckbapp.dev/"

# connect to the image fetcher service
image_fetcher_url = "https://mempool.space/testnet/api/tx/"

# address that rpc server running at in case of standalone server mode
rpc_server_address = "0.0.0.0:8090"

# native ckb-vm execution env in case of embeded ckb-vm feature
ckb_vm_runner = "ckb-vm-runner"

# directory that stores decoders on hard-disk, including on-chain and off-chain binary files
decoders_cache_directory = "cache/decoders"

# directory that stores DOBs rendering results on hard-disk
dobs_cache_directory = "cache/dobs"

# identifier that represents the maximum combination of DOB/1
dob1_max_combination = 5

# identifier that represents the maximum number of caching images
dob1_max_cache_size = 100

# all deployed on-chain Spore contracts binary hash (order from new to old)
# refer to: https://github.com/sporeprotocol/spore-contract/blob/master/docs/VERSIONS.md
[[available_spores]]
code_hash = "0x685a60219309029d01310311dba953d67029170ca4848a4ff638e57002130a0d"
hash_type = "data1"

[[available_spores]]
code_hash = "0x5e063b4c0e7abeaa6a428df3b693521a3050934cf3b0ae97a800d1bc31449398"
hash_type = "data1"

# all deployed on-chain Cluster contracts binary hash (order from new to old)
# refer to: https://github.com/sporeprotocol/spore-contract/blob/master/docs/VERSIONS.md
[[available_clusters]]
code_hash = "0x0bbe768b519d8ea7b96d58f1182eb7e6ef96c541fbd9526975077ee09f049058"
hash_type = "data1"

[[available_clusters]]
code_hash = "0x7366a61534fa7c7e6225ecc0d828ea3b5366adec2b58206f2ee84995fe030075"
hash_type = "data1"

# associate `code_hash` with the corresponding onchain information about `tx_hash` and `out_index`
# server will firstly search onchain decoders by `code_hash` in this configuration, if not found, cache will be used instead
[[onchain_decoder_deployment]]
code_hash = "0xb82abd59ade361a014f0abb692f71b0feb880693c3ccb95b9137b73551d872ce"
tx_hash = "0xb2497dc3e616055125ef8276be7ee21986d2cd4b2ce90992725386cabcb6ea7f"
out_index = 0

[[onchain_decoder_deployment]]
code_hash = "0x32f29aba4b17f3d05bec8cec55d50ef86766fd0bf82fdedaa14269f344d3784a"
tx_hash = "0x987cf95d129a2dcc2cdf7bd387c1bd888fa407e3c5a3d511fd80c80dcf6c6b67"
out_index = 0
